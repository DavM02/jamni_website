{"version":3,"file":"static/js/149.d89315e9.chunk.js","mappings":"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","sources":["hooks/useProductActions.js","pages/FavoritesPage/FavoritesSections.js","stores/favStore.js"],"sourcesContent":["import useSWRImmutable from \"swr/immutable\";\nimport { userCartStore } from \"../stores/cartStore\";\nimport { userFavStore } from \"../stores/favStore\";\nimport { modalStore } from \"../stores/modalStore\";\nimport { getItem } from \"../db/loadData\";\nimport { useParams } from \"react-router-dom\";\nimport { useSearchParams } from \"react-router-dom\";\nfunction useProductActions(productId) {\n    const addToCart = userCartStore((state) => state.addProduct);\n    const { addProduct: addToFav, products } = userFavStore();\n    const { toggleAdded } = modalStore();\n    const { toggleFav } = modalStore();\n    const isFav = products.some((el) => productId === el.id)\n\n    const [searchParams] = useSearchParams()\n\n    const id = searchParams.get(\"id\")\n\n    const { catalog } = useParams()\n\n    const { data: productData } = useSWRImmutable(\n        [id, catalog],\n        getItem\n    );\n\n    const handleAddToCart = (e, configuration = [], data) => {\n\n       if(e) e.preventDefault()\n\n        const product = data ?? productData\n\n        const newProduct = {\n            catalog: product.id.split('_')[1],\n            product: product.product,\n            image: product.image ?? product.images[0],\n            name: product.name,\n            collection: product.collection,\n            id: product.id,\n            price: product.price,\n            quantity: product.quantity ?? 0,\n            priceConfig:  ((configuration && configuration.length)? configuration.reduce((sum, item) => sum + item.price * item.quantity, 0) : 0),\n            configuration: (configuration && configuration.length) ? configuration : undefined\n        };\n\n        if (e?.target instanceof HTMLFormElement) {\n \n            const formData = new FormData(e.target);\n\n            for (let [key, value] of formData.entries()) {\n                newProduct[key] = value;\n    \n            }\n\n        }\n        addToCart(newProduct);\n        toggleAdded();\n        setTimeout(() => {\n            toggleAdded();\n        }, 1500);\n    };\n\n    const handleAddToFav = (product, ref) => {\n\n        const newProduct = {\n            catalog: product.id.split('_')[1],\n            product: product.product,\n            image: product.images[0],\n            name: product.name,\n            collection: product.collection,\n            id: product.id,\n            price: product.price,\n        };\n\n        if (ref) {\n            const formData = new FormData(ref.current);\n\n            for (let [key, value] of formData.entries()) {\n                newProduct[key] = value;\n            }\n        }\n\n        addToFav(newProduct);\n        toggleFav();\n        setTimeout(() => {\n            toggleFav();\n        }, 1500);\n    };\n\n    return {\n        handleAddToCart,\n        handleAddToFav,\n        isFav\n    };\n}\n\nexport default useProductActions;\n","\nimport './favorites.css'\nimport { userFavStore } from '../../stores/favStore';\nimport { AnimatePresence } from 'framer-motion';\nimport SmoothAppearance from '../../components/ui/SmoothAppearance';\nimport CartItem from '../../components/Cart/CartItem/CartItem';\nimport MainButton from '../../components/ui/buttons/MainButton/MainButton';\nimport CartWrapper from '../../components/Cart/CartItem/CartWrapper';\nimport useProductActions from '../../hooks/useProductActions';\nexport default function FavoritesSections() {\n\n    const { products, removeProduct, increaseQuantity, decreaseQuantity } = userFavStore();\n    const { handleAddToCart } = useProductActions()\n\n\n\n    return (\n        <section id='favorites'>\n\n            <div className='center-flex'>\n                <div className='container'>\n\n\n                    <AnimatePresence mode=\"wait\" initial={false}>\n                        {products.length > 0 ? <SmoothAppearance\n\n                            key={\"list\"}>\n                            <ul\n\n                                className=\"fav-items column gap-40\">\n                                {products.map((el) => (\n                                    <CartWrapper\n                                        key={el.id}\n                                        product={el}\n                                    >\n\n                                        <CartItem\n                                            product={el}\n                                            increaseQuantity={increaseQuantity}\n                                            decreaseQuantity={decreaseQuantity}\n                                            removeProduct={removeProduct}\n                                        />\n                                        <MainButton onClick={(e) => {\n                                            e.stopPropagation()\n                                            handleAddToCart(e, null, { ...el, quantity: el.quantity })\n                                        }}>\n                                            добавить в корзину\n                                        </MainButton>\n\n                                    </CartWrapper>\n                                ))}\n                            </ul>\n                        </SmoothAppearance> : <SmoothAppearance\n                            key={'no-found'}>\n                            <h5 className=\"text-center\">\n                                у вас нет избранных товаров\n                            </h5>\n                        </SmoothAppearance>}\n                    </AnimatePresence>\n\n\n                </div>\n            </div>\n\n        </section>\n    )\n}\n","import { create } from \"zustand\";\nimport { persist } from \"zustand/middleware\";\n\nexport const userFavStore = create(\n    persist(\n        (set, get) => ({\n            products: [],\n\n            addProduct: (item) => {\n                set((state) => {\n                    const productExists = state.products.some(\n                        (el) => el.id === item.id\n                    );\n\n                    if (!productExists) {\n                        const updatedProducts = [\n                            ...state.products,\n                            { ...item, quantity: 1 },\n                        ];\n                        return { products: updatedProducts };\n                    } else {\n                        const updatedProducts = state.products.map((el) =>\n                            el.id === item.id ? { ...el, quantity: el.quantity + 1 } : el\n                        );\n                        return { products: updatedProducts };\n                    }\n                });\n            },\n\n            removeProduct: (itemId) => {\n                set((state) => {\n                    const updatedProducts = state.products.filter(\n                        (item) => item.id !== itemId\n                    );\n                    return { products: updatedProducts };\n                });\n            },\n\n            increaseQuantity: (itemId) => {\n                set((state) => {\n                    const updatedProducts = state.products.map((el) =>\n                        el.id === itemId ? { ...el, quantity: el.quantity + 1 } : el\n                    );\n                    return { products: updatedProducts };\n                });\n            },\n\n            decreaseQuantity: (itemId, quantity) => {\n                set((state) => {\n                    let updatedProducts = []\n                    if (quantity === 1) {\n                        updatedProducts = state.products.filter(\n                            (item) => item.id !== itemId\n                        );\n                    } else {\n                        updatedProducts = state.products.map((el) =>\n                            el.id === itemId\n                                ? { ...el, quantity: Math.max(1, el.quantity - 1) }\n                                : el\n                        );\n                    }\n                    return { products: updatedProducts };\n                });\n            },\n\n\n        }),\n        {\n            name: \"fav-storage\",\n            getStorage: () => localStorage,\n        }\n    )\n);\n"],"names":["productId","addToCart","userCartStore","state","addProduct","_userFavStore","userFavStore","addToFav","products","toggleAdded","modalStore","toggleFav","isFav","some","el","id","_useSearchParams","useSearchParams","_slicedToArray","get","catalog","useParams","productData","useSWRImmutable","getItem","data","handleAddToCart","e","_product$image","_product$quantity","configuration","arguments","length","undefined","preventDefault","product","newProduct","split","image","images","name","collection","price","quantity","priceConfig","reduce","sum","item","target","HTMLFormElement","_step","formData","FormData","_iterator","_createForOfIteratorHelper","entries","s","n","done","_step$value","value","key","err","f","setTimeout","handleAddToFav","ref","_step2","current","_iterator2","_step2$value","FavoritesSections","removeProduct","increaseQuantity","decreaseQuantity","useProductActions","_jsx","children","className","AnimatePresence","mode","initial","SmoothAppearance","map","_jsxs","CartWrapper","CartItem","MainButton","onClick","stopPropagation","_objectSpread","create","persist","set","concat","_toConsumableArray","itemId","filter","Math","max","getStorage","localStorage"],"sourceRoot":""}